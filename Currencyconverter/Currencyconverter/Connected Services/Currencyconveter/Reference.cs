//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Currencyconverter.Currencyconveter {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:NBGCurrency", ConfigurationName="Currencyconveter.NBGCurrencyPort")]
    public interface NBGCurrencyPort {
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCurrency", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetCurrency(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCurrency", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetCurrencyAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCurrencyDescription", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetCurrencyDescription(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCurrencyDescription", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetCurrencyDescriptionAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCurrencyChange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetCurrencyChange(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCurrencyChange", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetCurrencyChangeAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCurrencyRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        int GetCurrencyRate(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCurrencyRate", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<int> GetCurrencyRateAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string GetDate();
        
        [System.ServiceModel.OperationContractAttribute(Action="GetDate", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> GetDateAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface NBGCurrencyPortChannel : Currencyconverter.Currencyconveter.NBGCurrencyPort, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NBGCurrencyPortClient : System.ServiceModel.ClientBase<Currencyconverter.Currencyconveter.NBGCurrencyPort>, Currencyconverter.Currencyconveter.NBGCurrencyPort {
        
        public NBGCurrencyPortClient() {
        }
        
        public NBGCurrencyPortClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NBGCurrencyPortClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NBGCurrencyPortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NBGCurrencyPortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetCurrency(string code) {
            return base.Channel.GetCurrency(code);
        }
        
        public System.Threading.Tasks.Task<string> GetCurrencyAsync(string code) {
            return base.Channel.GetCurrencyAsync(code);
        }
        
        public string GetCurrencyDescription(string code) {
            return base.Channel.GetCurrencyDescription(code);
        }
        
        public System.Threading.Tasks.Task<string> GetCurrencyDescriptionAsync(string code) {
            return base.Channel.GetCurrencyDescriptionAsync(code);
        }
        
        public string GetCurrencyChange(string code) {
            return base.Channel.GetCurrencyChange(code);
        }
        
        public System.Threading.Tasks.Task<string> GetCurrencyChangeAsync(string code) {
            return base.Channel.GetCurrencyChangeAsync(code);
        }
        
        public int GetCurrencyRate(string code) {
            return base.Channel.GetCurrencyRate(code);
        }
        
        public System.Threading.Tasks.Task<int> GetCurrencyRateAsync(string code) {
            return base.Channel.GetCurrencyRateAsync(code);
        }
        
        public string GetDate() {
            return base.Channel.GetDate();
        }
        
        public System.Threading.Tasks.Task<string> GetDateAsync() {
            return base.Channel.GetDateAsync();
        }
    }
}
